name: Deploy to GitHub Pages

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Do NOT enable cache: pnpm here; that runs pnpm before it's installed
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # Put pnpm on PATH (reliable)
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - name: Verify pnpm
        run: pnpm --version

      # Optional: cache pnpm store (now that pnpm exists)
      - name: Resolve pnpm store path
        id: pnpm-store
        run: echo "STORE_PATH=$(pnpm store path)" >> "$GITHUB_OUTPUT"

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-store.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Install dependencies
        shell: bash
        run: |
          set -e
          if [ -f pnpm-workspace.yaml ]; then
            W="-w"
          else
            W=""
          fi
          if [ -f pnpm-lock.yaml ]; then
            echo "Lockfile found. Installing with frozen lockfile..."
            pnpm $W install --frozen-lockfile
          else
            echo "No lockfile found. Installing without frozen lockfile..."
            pnpm $W install --no-frozen-lockfile
          fi

      - name: Build
        run: pnpm run build

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist
          name: github-pages

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: github-pages